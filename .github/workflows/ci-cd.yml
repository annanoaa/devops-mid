name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest
    
    - name: Run tests
      run: |
        pytest
    
    - name: Archive test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          .pytest_cache
          
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install ansible
    
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0
    
    - name: Initialize Terraform
      run: terraform init
    
    - name: Apply Terraform
      run: terraform apply -auto-approve
    
    - name: Run Ansible deployment
      run: ansible-playbook deploy.yml
    
    - name: Archive deployment logs
      uses: actions/upload-artifact@v4
      with:
        name: deployment-logs
        path: logs/ 